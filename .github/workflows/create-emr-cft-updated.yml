name: Deploy EMR Cluster using CFT template

on:
  repository_dispatch:
    types: [create-emr-cft-updated]

jobs:
  deployment:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.deploy-emr.id }}
      value: ${{ steps.deploy-emr.outputs.deployment_error }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.event.client_payload.inputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ github.event.client_payload.inputs.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ github.event.client_payload.inputs.AWS_SESSION_TOKEN }}
          aws-region: ${{ github.event.inputs.AWS_Region || 'us-east-1' }}

      - name: Install Boto3
        run: pip install boto3

      - name: Validate Stack
        id: validate-stack
        env:
          aws-access-key-id: ${{ github.event.client_payload.inputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ github.event.client_payload.inputs.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ github.event.client_payload.inputs.AWS_SESSION_TOKEN }}
          aws-region: ${{ github.event.inputs.AWS_Region || 'us-east-1' }}
          stack-name: ${{ github.event.client_payload.inputs.stack-name }}
        run: |
          echo $stack-name &&
          python luminex/validation/stack_name_validator.py 2>&1 | tee validation_error.log
          echo "::set-output name=validation_error::$(cat validation_error.log)"

      - name: Deploy EMR cluster
        id: deploy-emr
        run: |
          stack_id=$(aws cloudformation create-stack \
            --stack-name ${{ github.event.client_payload.inputs.stack-name }} \
            --template-body file://./infrastructure/create-emr-cft.yml \
            --parameters file://./infrastructure/config_parameter.json \
            --role-arn \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM CAPABILITY_AUTO_EXPAND \
            | jq -r '.StackId') 2>&1 | tee deployment_error.log
          echo "::set-output name=deployment_error::$(cat deployment_error.log)"
